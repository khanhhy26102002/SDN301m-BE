<!-- <!DOCTYPE html>
<html>
<head>
  <title>Create Category</title>
</head>
<body>
  <h1>Create a New Category</h1>
  <form action="/api/category" method="POST">
    <label for="name">Category Name:</label>
    <input type="text" id="name" name="name" required>

    <label for="description">Category Description:</label>
    <input type="text" id="description" name="description" required>
    <button type="submit">Create Category</button>
  </form>
</body>
</html> -->
<!DOCTYPE html>
<html>
<head>
  <title>Create Category</title>
</head>
<body>
  <h1>Create a New Category</h1>
  <form id="createCategoryForm">
    <label for="name">Category Name:</label>
    <input type="text" id="name" name="name" required>

    <label for="description">Category Description:</label>
    <input type="text" id="description" name="description" required>

    <button type="submit">Create Category</button>
  </form>

  <script>
    document.getElementById('createCategoryForm').addEventListener('submit', async (event) => {
      event.preventDefault(); // Prevent the default form submission behavior

      const name = document.getElementById('name').value;
      const description = document.getElementById('description').value;

      // Retrieve the token from localStorage (or other secure storage)
      const token = localStorage.getItem('authToken'); // Replace 'authToken' with your actual token key

      if (!token) {
        alert('No token found! Please log in.');
        return;
      }

      try {
        const response = await fetch('/api/category', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`, // Attach the token dynamically
          },
          body: JSON.stringify({ name, description }),
        });

        if (response.ok) {
          const data = await response.json();
          alert(data.message); // Success message
          // Clear the form fields for the next input
          document.getElementById('createCategoryForm').reset();
        } else {
          // Handle errors and display error messages
          const errorData = await response.json();
          alert(errorData.message);
        }
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while creating the category.');
      }
    });
  </script>
</body>
</html>
